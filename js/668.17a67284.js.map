{"version":3,"file":"js/668.17a67284.js","mappings":"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","sources":["webpack://chat-app-vue/./src/views/ChatPage.vue","webpack://chat-app-vue/./src/components/Main/BaseNavbar.vue","webpack://chat-app-vue/./src/components/Main/BaseNavbar.vue?53bd","webpack://chat-app-vue/./src/components/MessageList.vue","webpack://chat-app-vue/./src/components/MessageList.vue?2e85","webpack://chat-app-vue/./src/views/ChatPage.vue?ad2f"],"sourcesContent":["<template>\r\n  <base-dialog\r\n  v-if=\"showDialog\"\r\n  @closeDialog=\"showDialog=false\"\r\n  >\r\n    <div class=\"chat_options_wrapper\">\r\n      <h3>Переписка с {{ this.$store.state.chat.currContactName }}</h3>\r\n      <div class=\"chat_options\">\r\n        <base-button class=\"danger\" @click=\"removeChat\">Убрать переписку</base-button>\r\n      </div>\r\n    </div>\r\n  </base-dialog>\r\n  <div class=\"chat_wrapper\">\r\n    <div class=\"chat_handler\" v-if=\"loading\">\r\n      <base-loader></base-loader>\r\n    </div>\r\n    <div class=\"chat_content\" v-else>\r\n      <header>\r\n        <base-navbar @openOptions=\"showDialog = true\"></base-navbar>\r\n      </header>\r\n      <message-list :messages = \"messages\"/>\r\n      <footer>\r\n        <base-input\r\n          class=\"chat_input\"\r\n          @keyup.enter=\"sendMessage\"\r\n          v-model = 'text'\r\n          :placehldr=\"'Введите сообщение'\"\r\n        />\r\n        <div class=\"send_button\" @click=\"sendMessage\">\r\n          <i class=\"fa-solid fa-paper-plane\"></i>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  </div> \r\n</template>\r\n\r\n<script>\r\nimport { onSnapshot, query, orderBy, collection,\r\n        updateDoc, doc, serverTimestamp } from '@firebase/firestore';\r\nimport { store } from '@/firebase/config'\r\n\r\nimport BaseNavbar from '@/components/Main/BaseNavbar.vue'\r\nimport MessageList from '@/components/MessageList.vue';\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      text: '',\r\n      messages: [],\r\n      showDialog: false,\r\n      unsubFunc: null\r\n    }\r\n  },\r\n  async mounted(){\r\n    this.loading = true\r\n    const info = await this.$store.dispatch('getUserInfo', this.$route.params.id)\r\n    const name = info.name,\r\n    photo = info.photoUrl\r\n    \r\n\r\n    this.$store.commit('setCurrChat', this.$route.params.id)\r\n    this.$store.commit('setCurrContactName', name)\r\n    this.$store.commit('setCurrContactPhoto', photo)\r\n\r\n    this.dropUnreadMessages(this.$route.params.id)\r\n    this.setMessagesListener()\r\n  },\r\n  unmounted() {\r\n    this.unsubFunc()\r\n  },\r\n  methods: {\r\n      async setMessagesListener(){\r\n        this.loading = true\r\n\r\n        const uid = this.$store.state.auth.userInfo.uid,\r\n              cuid = this.$store.state.chat.currChat,\r\n              collectionRef = collection(store, `users/${uid}/chats/${cuid}/messages`),\r\n              q = await query(collectionRef, orderBy('createdAt'))\r\n\r\n        let res = []\r\n        this.unsubFunc = onSnapshot(q, async s => {\r\n            if(cuid !== this.$route.params.id) return\r\n            res = []\r\n            s.forEach(el => {\r\n                const data = el.data(),\r\n                temp = {\r\n                ...data, date: data.date.toDate(),\r\n                sendedBy: data.sendedBy, type: data.sendedBy === uid ? \"outcoming\" : \"incoming\",\r\n                photoUrl: data.sendedBy === uid \r\n                ? this.$store.state.auth.userInfo.photoUrl\r\n                : this.$store.state.chat.currContactPhoto\r\n            }\r\n            setTimeout(()=>{\r\n                if(temp.type === 'incoming' && temp.status == 'sended'){\r\n                    this.updateMessageStatus(uid, cuid, el.id)\r\n                }\r\n            }, 0)\r\n            res.push(temp)\r\n            })\r\n            this.messages = res\r\n            await this.dropUnreadMessages(cuid)\r\n            this.loading = false\r\n        })\r\n    },        \r\n    async updateMessageStatus(from, to, messageId){\r\n      const messageRefFrom = doc(store, `users/${to}/chats/${from}/messages`, `${messageId}`)\r\n      \r\n      await updateDoc(messageRefFrom, {status: 'checked'})\r\n    },\r\n    async sendMessage(){\r\n      if(!this.text) return\r\n      const uid = this.$store.state.auth.userInfo.uid,\r\n            name = this.$store.state.auth.userInfo.name,\r\n            newMessage = {\r\n              text: this.text, date: new Date(),\r\n              createdAt: serverTimestamp(),\r\n              status: 'sending', sendedBy: uid,\r\n              name: name, type: 'outcoming',\r\n              photoUrl: this.$store.state.auth.userInfo.photoUrl\r\n                ? this.$store.state.auth.userInfo.photoUrl\r\n                : \"\", messageId: Math.random()\r\n\r\n            }\r\n      this.text = ''\r\n      this.messages.push(newMessage)\r\n      await this.$store.dispatch('sendMessage', {messageObject: newMessage,\r\n        to: this.$route.params.id, hostName: this.$store.state.chat.currContactName })  \r\n    },\r\n    async dropUnreadMessages(cuid){\r\n      try {\r\n        await this.$store.dispatch('dropUnreadMessages', cuid)\r\n      }\r\n      catch(e) {\r\n        console.log(e)\r\n      } \r\n    },\r\n    async removeChat() {\r\n      await this.$store.dispatch('removeChat')\r\n      this.showDialog = false\r\n      this.$router.push('/')\r\n    }\r\n  },\r\n  watch: {\r\n      async $route(){\r\n        await this.setMessagesListener()\r\n      },\r\n      async messages() {\r\n        await this.dropUnreadMessages(this.$route.params.id)\r\n      }\r\n  },\r\n  components: {\r\n    BaseNavbar, MessageList\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .chat_wrapper {\r\n    height: 100vh;\r\n    display: flex;\r\n    .chat_content {\r\n      height: 100%;\r\n      width: 100%;\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n      footer {\r\n        height: 72px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        .chat_input {\r\n          height: 100%;\r\n          flex: 1;\r\n          border-bottom: none;\r\n          &::placeholder {\r\n            position: absolute;\r\n            top: 5px;\r\n            left: 5px;\r\n          }\r\n        }\r\n        .send_button {\r\n          height: 100%;\r\n          width: 60px;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          cursor: pointer;\r\n          transition: .3s;\r\n          &:hover {\r\n            i {\r\n              transform: scale(1.1);\r\n              background-color: transparent;\r\n              color: $accent-color;\r\n            }\r\n          }\r\n          i {\r\n            transition: .3s;\r\n            color: $grey-color;\r\n            font-size: 26.5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .chat_handler {\r\n      display: flex;\r\n      width: 100%;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n  .chat_options_wrapper {\r\n    width: 300px;\r\n    h3 {\r\n      padding-bottom: 12.5px;\r\n      max-width: calc(100% - 40px);\r\n      overflow: hidden;\r\n    }\r\n    .chat_options {\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n      gap: 10px;\r\n    }\r\n  }\r\n</style>","<template>\r\n    <div class=\"chat_header\">\r\n        <div class=\"header_start\">\r\n            <div class=\"back_btn\" @click=\"$router.push('/')\">\r\n                <i class=\"fa-solid fa-angle-left\"></i>\r\n            </div>\r\n            <div class=\"title\">\r\n                <div class=\"image_wrapper\">\r\n                    <img\r\n                    v-if=\"$store.state.chat.currContactPhoto\"\r\n                    :src=\"$store.state.chat.currContactPhoto\"\r\n                    :alt=\"name\">\r\n                </div>\r\n                <p>{{ $store.state.chat.currContactName }}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"options\" @click=\"$emit('openOptions')\">\r\n            <i class=\"fa-solid fa-ellipsis-vertical\"></i>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'BaseNavbar',\r\n    props: ['name', 'uid'],\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chat_header {\r\n    color: $dark-color;\r\n    height: 60px;\r\n    width: calc(100% - 20px);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-left: 20px;\r\n    box-shadow: 10px 5px 10px 1px $grey-color;\r\n    .header_start {\r\n        display: flex;\r\n        gap: 20px;\r\n        align-items: center;\r\n    }\r\n    .contacts_button {\r\n        padding: 10px 20px;\r\n        height: 60px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        &:hover i {\r\n            filter: opacity(0.8);\r\n        }\r\n        i {\r\n            font-size: 25px;\r\n        }\r\n    }\r\n    .back_btn {\r\n        cursor: pointer;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 30px;\r\n        &:hover i {\r\n            color: $accent-color;\r\n        }\r\n        i {\r\n            transition: .3s;\r\n            font-size: 22px;\r\n        }   \r\n    }\r\n    .options {\r\n        width: 50px;\r\n        height: 80px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 22px;\r\n        transition: .3s;\r\n        &:hover {\r\n            cursor: pointer;\r\n            color: $accent-color;\r\n        }\r\n    }\r\n    .title, .options {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .title {\r\n        max-width: 320px;\r\n        overflow: hidden;\r\n        display: flex;\r\n        gap: 20px;\r\n        .image_wrapper  {\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 50%;\r\n            overflow: hidden;\r\n            background-color: $grey-color;\r\n            img {\r\n                height: 100%;\r\n                width: 100%;\r\n                object-fit: cover;\r\n            }\r\n        }\r\n        p {\r\n            max-width: 260px;\r\n            overflow-x: hidden;\r\n            white-space: nowrap;\r\n            font-size: 18px;\r\n        }\r\n    }\r\n}\r\n@media (max-width: 700px) {\r\n    .title {\r\n        max-width: 320px;\r\n        overflow: hidden;\r\n        display: flex;\r\n        gap: 20px;\r\n        .image_wrapper  {\r\n            width: 25px;\r\n            height: 25px;\r\n            img {\r\n                height: 100%;\r\n                width: 100%;\r\n                object-fit: cover;\r\n            }\r\n        }\r\n        p {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n}\r\n</style>","import { render } from \"./BaseNavbar.vue?vue&type=template&id=64743260&scoped=true\"\nimport script from \"./BaseNavbar.vue?vue&type=script&lang=js\"\nexport * from \"./BaseNavbar.vue?vue&type=script&lang=js\"\n\nimport \"./BaseNavbar.vue?vue&type=style&index=0&id=64743260&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Desktop\\\\vue\\\\chat\\\\chat-app-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-64743260\"]])\n\nexport default __exports__","<template>\r\n  <base-dialog v-if=\"showDialog\" @closeDialog=\"showDialog = false\">\r\n  <div class=\"message_options_wrapper\">  \r\n    <h3>Ваше сообщение</h3>\r\n    <div class=\"message_options\">\r\n        <base-button class=\"danger\" @click=\"deleteMessage\">Удалить сообщение</base-button>\r\n        <base-button @click=\"showEditModal\">Редактировать сообщение</base-button>\r\n    </div>    \r\n  </div>\r\n  </base-dialog>\r\n  <main v-if=\"messages.length\">\r\n        <base-message\r\n        class=\"message\"\r\n        v-for=\"message in messages\"\r\n        :key=\"message.timestamp\"\r\n        :message = 'message'\r\n        @openOptions=\"openOptions\"\r\n        ></base-message>\r\n    </main>\r\n    <div class=\"messages_handler\" v-else>\r\n        <p>Начните общение с {{ this.$store.state.chat.currContactName }} c чего нибудь хорошего! 🤟<br> Например, банальщины: спросите - \"Как у тебя дела?\"</p>\r\n    </div>\r\n    <base-dialog v-if=\"showEditDialog\" @keyup.enter=\"editMessage\" @closeDialog = \"showEditDialog = false\">  \r\n        <div class=\"edit_message_wrapper\">\r\n            <h3>Редактирование сообщения</h3>\r\n            <base-input\r\n            v-model=\"newText\"\r\n            />\r\n            <base-button @click=\"editMessage\">Сохранить</base-button>\r\n        </div>\r\n    </base-dialog>\r\n</template>\r\n\r\n<script>\r\nimport BaseButton from './UI/BaseButton.vue'\r\nexport default {\r\n  components: { BaseButton },\r\n    name: 'MessageList',\r\n    props: ['messages'],\r\n    data() {\r\n        return {\r\n            showDialog: false,\r\n            showEditDialog: false,\r\n            newText: '',\r\n            chosenMessage: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.scrollDown()\r\n    },\r\n    methods: {\r\n        scrollDown(){\r\n            setTimeout(()=>{\r\n                const messageBlocks = document.getElementsByClassName('message'),\r\n                    lastMessage = messageBlocks[messageBlocks.length - 1]\r\n                lastMessage?.scrollIntoView({behavior: 'smooth'})\r\n            }, 0)\r\n        },\r\n        openOptions(message) {\r\n            this.chosenMessage = message\r\n            this.showDialog = true\r\n        },\r\n        async deleteMessage() {\r\n            await this.$store.dispatch('deleteMessage', this.chosenMessage.messageId)\r\n            this.showDialog = false\r\n        },\r\n        showEditModal(){\r\n            this.showEditDialog = true\r\n        },\r\n        async editMessage() {\r\n            if(!this.newText) return\r\n            await this.$store.dispatch('updateMessage', {messageId: this.chosenMessage.messageId,\r\n                                                        newText: this.newText })\r\n            this.showEditDialog = false    \r\n            this.showDialog = false\r\n            this.newText = ''\r\n        }\r\n    },\r\n    watch: {\r\n        messages(){\r\n            this.scrollDown()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    main {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        gap: 10px;\r\n        flex: 1;\r\n        height: calc(100% - 155px);\r\n        width: calc(100% - 20px);\r\n        padding: 10px;\r\n        overflow-y: scroll;\r\n        background-color: rgba($grey-color, .2);\r\n        &::-webkit-scrollbar{\r\n            width: 0;\r\n        }\r\n        .messages_handler {\r\n            flex: 1;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n                p {\r\n                    padding: 10px;\r\n                    box-shadow: 5px 5px 10px 1px $grey-color;\r\n                    border: 1px solid $grey-color;\r\n                    border-radius: 8px;\r\n                }\r\n        }\r\n    }\r\n    .message_options_wrapper {\r\n        width: 300px;\r\n        h3 {\r\n            padding-bottom: 12.5px;\r\n        }   \r\n        .message_options {\r\n            display: flex;\r\n            flex-flow: column nowrap;\r\n            gap: 10px;\r\n        }\r\n    }\r\n    .edit_message_wrapper {\r\n        width: 300px;\r\n        display: flex;\r\n        flex-flow:  column nowrap;\r\n        gap: 10px;\r\n    }\r\n</style>","import { render } from \"./MessageList.vue?vue&type=template&id=663bb124&scoped=true\"\nimport script from \"./MessageList.vue?vue&type=script&lang=js\"\nexport * from \"./MessageList.vue?vue&type=script&lang=js\"\n\nimport \"./MessageList.vue?vue&type=style&index=0&id=663bb124&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Desktop\\\\vue\\\\chat\\\\chat-app-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-663bb124\"]])\n\nexport default __exports__","import { render } from \"./ChatPage.vue?vue&type=template&id=f613b4c4\"\nimport script from \"./ChatPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatPage.vue?vue&type=style&index=0&id=f613b4c4&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Desktop\\\\vue\\\\chat\\\\chat-app-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_6","$data","showDialog","_createBlock","_component_base_dialog","onCloseDialog","_cache","$event","_hoisted_1","_toDisplayString","$store","state","chat","currContactName","_hoisted_2","_createVNode","_component_base_button","onClick","$options","removeChat","_hoisted_3","loading","_createElementBlock","_hoisted_4","_component_base_loader","_hoisted_5","_component_base_navbar","onOpenOptions","_component_message_list","messages","_component_base_input","onKeyup","_withKeys","sendMessage","text","placehldr","args","_hoisted_8","_ctx","$router","push","currContactPhoto","src","alt","$props","name","$emit","props","__exports__","deleteMessage","showEditModal","length","_Fragment","_renderList","message","_component_base_message","key","timestamp","openOptions","showEditDialog","editMessage","_hoisted_7","newText","components","BaseButton","data","chosenMessage","mounted","this","scrollDown","methods","setTimeout","messageBlocks","document","getElementsByClassName","lastMessage","scrollIntoView","behavior","async","dispatch","messageId","watch","unsubFunc","info","$route","params","id","photo","photoUrl","commit","dropUnreadMessages","setMessagesListener","unmounted","uid","auth","userInfo","cuid","currChat","collectionRef","collection","store","q","query","orderBy","res","onSnapshot","s","forEach","el","temp","date","toDate","sendedBy","type","status","updateMessageStatus","from","to","messageRefFrom","doc","updateDoc","newMessage","Date","createdAt","serverTimestamp","Math","random","messageObject","hostName","e","console","log","BaseNavbar","MessageList","render"],"sourceRoot":""}